{"ast":null,"code":"import { authApi, ResponseResultCode } from \"../api/todolistsApi\";\nimport axios from \"axios/index\";\nimport { setAppError, setAppStatus, setInitializedStatusAC } from \"./appReducer\";\nimport { handlerServerAppError } from \"../common/utils/errorUtils\";\nconst initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isLoggedIn: false\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_AUTH_ME':\n      {\n        return { ...state,\n          ...action.data,\n          isLoggedIn: action.isLoggedIn\n        };\n      }\n\n    case 'IS_LOGGED_IN':\n      {\n        return { ...state,\n          isLoggedIn: action.isLoggedIn\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //type\n\n//action\nconst setAuthMeAC = (data, isLoggedIn) => ({\n  type: 'SET_AUTH_ME',\n  data,\n  isLoggedIn\n});\n\nexport const setLoggedInAC = isLoggedIn => ({\n  type: 'IS_LOGGED_IN',\n  isLoggedIn\n}); //thunk\n\nexport const AuthMeTC = () => async dispatch => {\n  try {\n    let response = await authApi.authMe();\n\n    if (response.data.resultCode === ResponseResultCode.OK) {\n      // dispatch(setLoggedInAC(true))\n      dispatch(setAuthMeAC(response.data.data, true));\n    } else {\n      handlerServerAppError(dispatch, response.data);\n    }\n  } catch (e) {\n    let err = e;\n\n    if (axios.isAxiosError(err)) {\n      var _err$response;\n\n      const error = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) ? err.response.data.error : err.message;\n      dispatch(setAppError(error));\n    }\n  } finally {\n    dispatch(setInitializedStatusAC(true));\n  }\n};\nexport const LoginTC = data => async dispatch => {\n  dispatch(setAppStatus('loading'));\n\n  try {\n    let response = await authApi.login(data);\n\n    if (response.data.resultCode === ResponseResultCode.OK) {\n      dispatch(setLoggedInAC(true));\n    } else {\n      handlerServerAppError(dispatch, response.data);\n    }\n  } catch (e) {\n    let err = e;\n\n    if (axios.isAxiosError(err)) {\n      var _err$response2;\n\n      const error = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) ? err.response.data.error : err.message;\n      dispatch(setAppError(error));\n    }\n  } finally {\n    dispatch(setAppStatus('succeeded'));\n  }\n};\nexport const logoutTC = () => async dispatch => {\n  dispatch(setAppStatus('loading'));\n\n  try {\n    let response = await authApi.logout();\n\n    if (response.data.resultCode === 0) {\n      dispatch(setLoggedInAC(false));\n    } else {\n      handlerServerAppError(dispatch, response.data);\n    }\n  } catch (e) {\n    let err = e;\n\n    if (axios.isAxiosError(err)) {\n      var _err$response3;\n\n      const error = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) ? err.response.data.error : err.message;\n      dispatch(setAppError(error));\n    }\n  } finally {\n    dispatch(setAppStatus('succeeded'));\n  }\n};","map":{"version":3,"names":["authApi","ResponseResultCode","axios","setAppError","setAppStatus","setInitializedStatusAC","handlerServerAppError","initialState","id","email","login","isLoggedIn","authReducer","state","action","type","data","setAuthMeAC","setLoggedInAC","AuthMeTC","dispatch","response","authMe","resultCode","OK","e","err","isAxiosError","error","message","LoginTC","logoutTC","logout"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/reducers/authReducer.tsx"],"sourcesContent":["import {authApi, AuthMeResponse, LoginRequestType, ResponseResultCode} from \"../api/todolistsApi\";\r\nimport {AppThunk} from \"../store/store\";\r\nimport axios, {AxiosError} from \"axios/index\";\r\nimport {setAppError, setAppStatus, setInitializedStatusAC} from \"./appReducer\";\r\nimport {handlerServerAppError} from \"../common/utils/errorUtils\";\r\n\r\nconst initialState = {\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authReducer = (state: StateAuthType = initialState, action: LoginActionType): StateAuthType => {\r\n    switch (action.type) {\r\n        case 'SET_AUTH_ME': {\r\n            return {...state, ...action.data, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case 'IS_LOGGED_IN': {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//type\r\ntype StateAuthType = typeof initialState\r\nexport type LoginActionType = ReturnType<typeof setAuthMeAC> | ReturnType<typeof setLoggedInAC>\r\n\r\n//action\r\nconst setAuthMeAC = (data: AuthMeResponse, isLoggedIn: boolean) => ({type: 'SET_AUTH_ME', data, isLoggedIn} as const)\r\nexport const setLoggedInAC = (isLoggedIn: boolean) => ({type: 'IS_LOGGED_IN', isLoggedIn} as const)\r\n\r\n//thunk\r\nexport const AuthMeTC = (): AppThunk => async (dispatch) => {\r\n    try {\r\n        let response = await authApi.authMe()\r\n        if (response.data.resultCode === ResponseResultCode.OK) {\r\n            // dispatch(setLoggedInAC(true))\r\n            dispatch(setAuthMeAC(response.data.data, true))\r\n        } else {\r\n            handlerServerAppError(dispatch, response.data)\r\n        }\r\n\r\n    } catch (e) {\r\n        let err = e as AxiosError | Error\r\n        if (axios.isAxiosError(err)) {\r\n            const error = err.response?.data\r\n                ? (err.response.data as { error: string }).error\r\n                : err.message\r\n            dispatch(setAppError(error))\r\n        }\r\n    } finally {\r\n        dispatch(setInitializedStatusAC(true))\r\n    }\r\n}\r\n\r\nexport const LoginTC = (data: LoginRequestType): AppThunk => async (dispatch) => {\r\n    dispatch(setAppStatus('loading'))\r\n    try {\r\n        let response = await authApi.login(data)\r\n        if (response.data.resultCode === ResponseResultCode.OK) {\r\n            dispatch(setLoggedInAC(true))\r\n        } else {\r\n            handlerServerAppError(dispatch, response.data)\r\n        }\r\n    } catch (e) {\r\n        let err = e as AxiosError | Error\r\n        if (axios.isAxiosError(err)) {\r\n            const error = err.response?.data\r\n                ? (err.response.data as { error: string }).error\r\n                : err.message\r\n            dispatch(setAppError(error))\r\n        }\r\n    } finally {\r\n        dispatch(setAppStatus('succeeded'))\r\n    }\r\n}\r\n\r\nexport const logoutTC = (): AppThunk => async (dispatch) => {\r\n    dispatch(setAppStatus('loading'))\r\n    try {\r\n        let response = await authApi.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setLoggedInAC(false))\r\n        } else {\r\n            handlerServerAppError(dispatch, response.data)\r\n        }\r\n    } catch (e) {\r\n        let err = e as AxiosError | Error\r\n        if (axios.isAxiosError(err)) {\r\n            const error = err.response?.data\r\n                ? (err.response.data as { error: string }).error\r\n                : err.message\r\n            dispatch(setAppError(error))\r\n        }\r\n    } finally {\r\n        dispatch(setAppStatus('succeeded'))\r\n    }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}