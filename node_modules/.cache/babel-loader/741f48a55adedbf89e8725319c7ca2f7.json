{"ast":null,"code":"import { applyMiddleware, combineReducers, legacy_createStore } from \"redux\";\nimport { tasksReducer } from \"../reducers/tasksReducer\";\nimport { todoListsReducer } from \"../reducers/todoListsReducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport { appReducer } from \"../reducers/appReducer\";\nimport { authReducer } from \"../reducers/authReducer\";\nconst rootReducer = combineReducers({\n  app: appReducer,\n  tasks: tasksReducer,\n  todoLists: todoListsReducer,\n  auth: authReducer\n});\nexport const store = legacy_createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"names":["applyMiddleware","combineReducers","legacy_createStore","tasksReducer","todoListsReducer","thunkMiddleware","appReducer","authReducer","rootReducer","app","tasks","todoLists","auth","store"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/store/store.ts"],"sourcesContent":["import {applyMiddleware, combineReducers, legacy_createStore} from \"redux\";\r\nimport {tasksReducer} from \"../reducers/tasksReducer\";\r\nimport {TodoListsActionType, todoListsReducer} from \"../reducers/todoListsReducer\";\r\nimport {TasksActionType} from '../reducers/tasksReducer'\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {AppActionsType, appReducer} from \"../reducers/appReducer\";\r\nimport {LoginActionType, authReducer} from \"../reducers/authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    tasks: tasksReducer,\r\n    todoLists: todoListsReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport const store = legacy_createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionType = TodoListsActionType | TasksActionType | AppActionsType | LoginActionType\r\n\r\n\r\nexport type AppDispatch = ThunkDispatch<AppRootStateType, unknown, AppActionType>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionType>"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,kBAA1C,QAAmE,OAAnE;AACA,SAAQC,YAAR,QAA2B,0BAA3B;AACA,SAA6BC,gBAA7B,QAAoD,8BAApD;AAGA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAwBC,UAAxB,QAAyC,wBAAzC;AACA,SAAyBC,WAAzB,QAA2C,yBAA3C;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAChCQ,GAAG,EAAEH,UAD2B;EAEhCI,KAAK,EAAEP,YAFyB;EAGhCQ,SAAS,EAAEP,gBAHqB;EAIhCQ,IAAI,EAAEL;AAJ0B,CAAD,CAAnC;AAOA,OAAO,MAAMM,KAAK,GAAGX,kBAAkB,CAACM,WAAD,EAAcR,eAAe,CAACK,eAAD,CAA7B,CAAhC"},"metadata":{},"sourceType":"module"}