{"ast":null,"code":"import axios from \"axios\";\nconst incstanse = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.1/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': 'da9cb287-f4c3-4451-9409-0a992045ae44'\n  }\n});\nexport const todolistsAPI = {\n  getTodolists() {\n    return incstanse.get('todo-lists');\n  },\n\n  deleteTodolists(todoListID) {\n    return incstanse.delete(`todo-lists/${todoListID}`);\n  },\n\n  addTodolist(title) {\n    return incstanse.post('todo-lists', {\n      title\n    });\n  }\n\n};\nexport const tasksAPI = {\n  getTasks(todolistId) {\n    return incstanse.get(`todo-lists/${todolistId}/tasks`);\n  },\n\n  addTask(todolistId, title) {\n    return incstanse.post(`todo-lists/${todolistId}/tasks`, {\n      title\n    });\n  },\n\n  removeTask(todolistId, taskId) {\n    return incstanse.delete(`/todo-lists/${todolistId}/tasks/${taskId}`);\n  },\n\n  updateTask(todolistId, taskId, model) {\n    return incstanse.put(`todo-lists/${todolistId}/tasks/${taskId}`, model);\n  }\n\n};\nexport const authApi = {\n  authMe() {\n    return incstanse.get('auth/me');\n  },\n\n  login(data) {\n    return incstanse.post('auth/login', data);\n  },\n\n  logout() {\n    return incstanse.delete('auth/login');\n  }\n\n}; //enum\n\nexport let TaskStatuses;\n\n(function (TaskStatuses) {\n  TaskStatuses[TaskStatuses[\"New\"] = 0] = \"New\";\n  TaskStatuses[TaskStatuses[\"InProgress\"] = 1] = \"InProgress\";\n  TaskStatuses[TaskStatuses[\"Completed\"] = 2] = \"Completed\";\n  TaskStatuses[TaskStatuses[\"Draft\"] = 3] = \"Draft\";\n})(TaskStatuses || (TaskStatuses = {}));\n\nexport let TaskPriorities;\n\n(function (TaskPriorities) {\n  TaskPriorities[TaskPriorities[\"Low\"] = 0] = \"Low\";\n  TaskPriorities[TaskPriorities[\"Middle\"] = 1] = \"Middle\";\n  TaskPriorities[TaskPriorities[\"Hi\"] = 2] = \"Hi\";\n  TaskPriorities[TaskPriorities[\"Urgently\"] = 3] = \"Urgently\";\n  TaskPriorities[TaskPriorities[\"Later\"] = 4] = \"Later\";\n})(TaskPriorities || (TaskPriorities = {}));\n\nexport let ResponseResultCode; //typesCommon\n\n(function (ResponseResultCode) {\n  ResponseResultCode[ResponseResultCode[\"OK\"] = 0] = \"OK\";\n  ResponseResultCode[ResponseResultCode[\"ERROR\"] = 1] = \"ERROR\";\n})(ResponseResultCode || (ResponseResultCode = {}));","map":{"version":3,"names":["axios","incstanse","create","baseURL","withCredentials","headers","todolistsAPI","getTodolists","get","deleteTodolists","todoListID","delete","addTodolist","title","post","tasksAPI","getTasks","todolistId","addTask","removeTask","taskId","updateTask","model","put","authApi","authMe","login","data","logout","TaskStatuses","TaskPriorities","ResponseResultCode"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/api/todolistsApi.ts"],"sourcesContent":["import axios, {AxiosResponse} from \"axios\";\r\n\r\n\r\nconst incstanse = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'da9cb287-f4c3-4451-9409-0a992045ae44'\r\n    }\r\n})\r\n\r\nexport const todolistsAPI = {\r\n    getTodolists() {\r\n        return incstanse.get<TodolistType[]>('todo-lists')\r\n    },\r\n    deleteTodolists(todoListID: string) {\r\n        return incstanse.delete<ResponseType>(`todo-lists/${todoListID}`)\r\n    },\r\n    addTodolist(title: string) {\r\n        return incstanse.post<{ title: string }, AxiosResponse<ResponseType<{ item: TodolistType }>>>('todo-lists', {title})\r\n    }\r\n}\r\n\r\nexport const tasksAPI = {\r\n    getTasks(todolistId: string) {\r\n        return incstanse.get(`todo-lists/${todolistId}/tasks`)\r\n    },\r\n    addTask(todolistId: string, title: string) {\r\n        return incstanse.post<{ title: string }, AxiosResponse<ResponseType<{ item: TaskType }>>>(`todo-lists/${todolistId}/tasks`, {title})\r\n    },\r\n    removeTask(todolistId: string, taskId: string) {\r\n        return incstanse.delete<ResponseType>(`/todo-lists/${todolistId}/tasks/${taskId}`)\r\n    },\r\n    updateTask(todolistId: string, taskId: string, model: UpdateTaskModelType) {\r\n        return incstanse.put<UpdateTaskModelType, AxiosResponse<ResponseType<{ item: TaskType }>>>(`todo-lists/${todolistId}/tasks/${taskId}`, model)\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    authMe() {\r\n        return incstanse.get<ResponseType<AuthMeResponse>>('auth/me')\r\n    },\r\n    login(data: LoginRequestType) {\r\n        return incstanse.post<LoginRequestType, AxiosResponse<ResponseType<{userId: number}>>>('auth/login', data)\r\n    }, logout () {\r\n        return incstanse.delete<ResponseType>('auth/login')\r\n    }\r\n}\r\n\r\n//enum\r\nexport enum TaskStatuses {\r\n    New = 0,\r\n    InProgress = 1,\r\n    Completed = 2,\r\n    Draft = 3\r\n}\r\n\r\nexport enum TaskPriorities {\r\n    Low = 0,\r\n    Middle = 1,\r\n    Hi = 2,\r\n    Urgently = 3,\r\n    Later = 4\r\n}\r\n\r\nexport enum ResponseResultCode {\r\n    OK = 0,\r\n    ERROR = 1\r\n}\r\n\r\n\r\n//typesCommon\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    data: D\r\n}\r\n\r\n//typesTask\r\nexport type TaskType = {\r\n    description: string\r\n    title: string\r\n    status: TaskStatuses\r\n    priority: number\r\n    startDate: string\r\n    deadline: string\r\n    id: string\r\n    todoListId: string\r\n    order: number\r\n    addedDate: string\r\n}\r\n\r\nexport type UpdateTaskModelType = {\r\n    title: string\r\n    description: string\r\n    status: TaskStatuses\r\n    priority: TaskPriorities\r\n    startDate: string\r\n    deadline: string\r\n}\r\n\r\n\r\n//typesTodolist\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    addedDate: string\r\n    order: number\r\n}\r\n\r\n//typesAuth\r\nexport type AuthMeResponse = {\r\n    email: string\r\n    id: number\r\n    login: string\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: boolean\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAGA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC3BC,OAAO,EAAE,+CADkB;EAE3BC,eAAe,EAAE,IAFU;EAG3BC,OAAO,EAAE;IACL,WAAW;EADN;AAHkB,CAAb,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG;EACxBC,YAAY,GAAG;IACX,OAAON,SAAS,CAACO,GAAV,CAA8B,YAA9B,CAAP;EACH,CAHuB;;EAIxBC,eAAe,CAACC,UAAD,EAAqB;IAChC,OAAOT,SAAS,CAACU,MAAV,CAAgC,cAAaD,UAAW,EAAxD,CAAP;EACH,CANuB;;EAOxBE,WAAW,CAACC,KAAD,EAAgB;IACvB,OAAOZ,SAAS,CAACa,IAAV,CAAuF,YAAvF,EAAqG;MAACD;IAAD,CAArG,CAAP;EACH;;AATuB,CAArB;AAYP,OAAO,MAAME,QAAQ,GAAG;EACpBC,QAAQ,CAACC,UAAD,EAAqB;IACzB,OAAOhB,SAAS,CAACO,GAAV,CAAe,cAAaS,UAAW,QAAvC,CAAP;EACH,CAHmB;;EAIpBC,OAAO,CAACD,UAAD,EAAqBJ,KAArB,EAAoC;IACvC,OAAOZ,SAAS,CAACa,IAAV,CAAoF,cAAaG,UAAW,QAA5G,EAAqH;MAACJ;IAAD,CAArH,CAAP;EACH,CANmB;;EAOpBM,UAAU,CAACF,UAAD,EAAqBG,MAArB,EAAqC;IAC3C,OAAOnB,SAAS,CAACU,MAAV,CAAgC,eAAcM,UAAW,UAASG,MAAO,EAAzE,CAAP;EACH,CATmB;;EAUpBC,UAAU,CAACJ,UAAD,EAAqBG,MAArB,EAAqCE,KAArC,EAAiE;IACvE,OAAOrB,SAAS,CAACsB,GAAV,CAAqF,cAAaN,UAAW,UAASG,MAAO,EAA7H,EAAgIE,KAAhI,CAAP;EACH;;AAZmB,CAAjB;AAeP,OAAO,MAAME,OAAO,GAAG;EACnBC,MAAM,GAAG;IACL,OAAOxB,SAAS,CAACO,GAAV,CAA4C,SAA5C,CAAP;EACH,CAHkB;;EAInBkB,KAAK,CAACC,IAAD,EAAyB;IAC1B,OAAO1B,SAAS,CAACa,IAAV,CAAgF,YAAhF,EAA8Fa,IAA9F,CAAP;EACH,CANkB;;EAMhBC,MAAM,GAAI;IACT,OAAO3B,SAAS,CAACU,MAAV,CAA+B,YAA/B,CAAP;EACH;;AARkB,CAAhB,C,CAWP;;AACA,WAAYkB,YAAZ;;WAAYA,Y;EAAAA,Y,CAAAA,Y;EAAAA,Y,CAAAA,Y;EAAAA,Y,CAAAA,Y;EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAOZ,WAAYC,cAAZ;;WAAYA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c;;AAQZ,WAAYC,kBAAZ,C,CAMA;;WANYA,kB;EAAAA,kB,CAAAA,kB;EAAAA,kB,CAAAA,kB;GAAAA,kB,KAAAA,kB"},"metadata":{},"sourceType":"module"}