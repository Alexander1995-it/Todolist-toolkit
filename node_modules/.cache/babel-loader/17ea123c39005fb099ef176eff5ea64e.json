{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT-Incubator\\\\Todolist-toolkit\\\\src\\\\common\\\\AddItemForm\\\\AddItemForm.tsx\";\nimport React, { useState } from 'react';\nimport { Button, TextField } from \"@mui/material\";\n\nconst AddItemForm = props => {\n  const {\n    callBack\n  } = props;\n  let [title, setTitle] = useState('');\n\n  const onClickHandler = () => {\n    callBack(title);\n    setTitle('');\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    size: 'small',\n    onChange: onChangeHandler,\n    value: title,\n    id: \"outlined-basic\",\n    label: props.label ? props.label : 'Outlined',\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClickHandler,\n    disabled: props.disabled,\n    variant: \"contained\",\n    style: {\n      maxWidth: '38px',\n      maxHeight: '38px',\n      minWidth: '38px',\n      minHeight: '38px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"+\"));\n};\n\nexport default AddItemForm;","map":{"version":3,"names":["React","useState","Button","TextField","AddItemForm","props","callBack","title","setTitle","onClickHandler","onChangeHandler","e","currentTarget","value","label","disabled","maxWidth","maxHeight","minWidth","minHeight"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/common/AddItemForm/AddItemForm.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\r\nimport {Button, TextField} from \"@mui/material\";\r\n\r\ntype AddItemFormPropsType = {\r\n    callBack: (title: string) => void\r\n    disabled?: boolean\r\n    label?: string\r\n\r\n}\r\n\r\nconst AddItemForm = (props: AddItemFormPropsType) => {\r\n\r\n    const {callBack} = props\r\n    let [title, setTitle] = useState('')\r\n\r\n    const onClickHandler = () => {\r\n        callBack(title)\r\n        setTitle('')\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                size={'small'}\r\n                onChange={onChangeHandler}\r\n                value={title}\r\n                id=\"outlined-basic\"\r\n                label={props.label ? props.label : 'Outlined'}\r\n                variant='outlined'/>\r\n            <Button\r\n                onClick={onClickHandler}\r\n                disabled={props.disabled}\r\n                variant=\"contained\"\r\n                style={{maxWidth: '38px', maxHeight: '38px', minWidth: '38px', minHeight: '38px'}}\r\n            >\r\n                +\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddItemForm;"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,eAAhC;;AASA,MAAMC,WAAW,GAAIC,KAAD,IAAiC;EAEjD,MAAM;IAACC;EAAD,IAAaD,KAAnB;EACA,IAAI,CAACE,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMQ,cAAc,GAAG,MAAM;IACzBH,QAAQ,CAACC,KAAD,CAAR;IACAC,QAAQ,CAAC,EAAD,CAAR;EACH,CAHD;;EAKA,MAAME,eAAe,GAAIC,CAAD,IAAsC;IAC1DH,QAAQ,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;EACH,CAFD;;EAIA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IACI,IAAI,EAAE,OADV;IAEI,QAAQ,EAAEH,eAFd;IAGI,KAAK,EAAEH,KAHX;IAII,EAAE,EAAC,gBAJP;IAKI,KAAK,EAAEF,KAAK,CAACS,KAAN,GAAcT,KAAK,CAACS,KAApB,GAA4B,UALvC;IAMI,OAAO,EAAC,UANZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAQI,oBAAC,MAAD;IACI,OAAO,EAAEL,cADb;IAEI,QAAQ,EAAEJ,KAAK,CAACU,QAFpB;IAGI,OAAO,EAAC,WAHZ;IAII,KAAK,EAAE;MAACC,QAAQ,EAAE,MAAX;MAAmBC,SAAS,EAAE,MAA9B;MAAsCC,QAAQ,EAAE,MAAhD;MAAwDC,SAAS,EAAE;IAAnE,CAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OARJ,CADJ;AAmBH,CAjCD;;AAmCA,eAAef,WAAf"},"metadata":{},"sourceType":"module"}