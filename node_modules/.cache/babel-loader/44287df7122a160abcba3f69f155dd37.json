{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT-Incubator\\\\Todolist-toolkit\\\\src\\\\common\\\\EtidTitle\\\\EtidTitle.tsx\";\nimport React, { useState } from 'react';\nexport const EditableSpan = props => {\n  const [edit, setEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState(props.title);\n\n  const addTask = () => {\n    if (newTitle !== '') {\n      props.callBack(newTitle);\n    }\n  };\n\n  const editHandler = () => {\n    setEdit(!edit);\n    addTask();\n  };\n\n  const onChangeHandler = e => {\n    setNewTitle(e.currentTarget.value);\n  };\n\n  return edit ? /*#__PURE__*/React.createElement(\"input\", {\n    value: newTitle,\n    onChange: onChangeHandler,\n    onBlur: editHandler,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    onDoubleClick: editHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, props.title);\n};","map":{"version":3,"names":["React","useState","EditableSpan","props","edit","setEdit","newTitle","setNewTitle","title","addTask","callBack","editHandler","onChangeHandler","e","currentTarget","value"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/common/EtidTitle/EtidTitle.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EtidTitlePropsType = {\r\n    title: string\r\n    callBack: (title: string) => void\r\n\r\n}\r\n\r\nexport const EditableSpan = (props: EtidTitlePropsType) => {\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [newTitle, setNewTitle] = useState(props.title)\r\n\r\n    const addTask = () => {\r\n        if (newTitle !== '') {\r\n            props.callBack (newTitle)\r\n        }\r\n    }\r\n\r\n    const editHandler = () => {\r\n        setEdit(!edit)\r\n        addTask ()\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        edit\r\n        ? <input value={newTitle} onChange={onChangeHandler} onBlur={editHandler} autoFocus/>\r\n        : <span onDoubleClick={editHandler}>{props.title}</span>\r\n    )\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AAQA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAA+B;EAEvD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACE,KAAK,CAACK,KAAP,CAAxC;;EAEA,MAAMC,OAAO,GAAG,MAAM;IAClB,IAAIH,QAAQ,KAAK,EAAjB,EAAqB;MACjBH,KAAK,CAACO,QAAN,CAAgBJ,QAAhB;IACH;EACJ,CAJD;;EAMA,MAAMK,WAAW,GAAG,MAAM;IACtBN,OAAO,CAAC,CAACD,IAAF,CAAP;IACAK,OAAO;EACV,CAHD;;EAKA,MAAMG,eAAe,GAAIC,CAAD,IAAsC;IAC1DN,WAAW,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;EACH,CAFD;;EAIA,OACIX,IAAI,gBACF;IAAO,KAAK,EAAEE,QAAd;IAAwB,QAAQ,EAAEM,eAAlC;IAAmD,MAAM,EAAED,WAA3D;IAAwE,SAAS,MAAjF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADE,gBAEF;IAAM,aAAa,EAAEA,WAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAmCR,KAAK,CAACK,KAAzC,CAHN;AAKH,CAzBM"},"metadata":{},"sourceType":"module"}