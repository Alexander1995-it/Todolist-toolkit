{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT-Incubator\\\\Todolist-toolkit\\\\src\\\\components\\\\Task\\\\Task.tsx\";\nimport React from 'react';\nimport { Checkbox } from \"@mui/material\";\nimport { EditableSpan } from \"../../common/EtidTitle/EtidTitle\";\nimport { removeTaskTC, updateStatusTC, updateTitleTC } from \"../../reducers/tasksReducer\";\nimport { TaskStatuses } from \"../../api/todolistsApi\";\nimport { useAppDispatch } from \"../../common/hooks/hooks\";\nconst Task = React.memo(_ref => {\n  let {\n    task,\n    todolistId\n  } = _ref;\n  const dispatch = useAppDispatch();\n\n  const editTaskHandler = (todolistId, taskID, newTitle) => {\n    dispatch(updateTitleTC(todolistId, taskID, newTitle));\n  };\n\n  const onHandlerDelete = () => dispatch(removeTaskTC(todolistId, task.id));\n\n  const onChangeHandler = e => {\n    let newIsDoneValue = e.currentTarget.checked;\n    dispatch(updateStatusTC(todolistId, task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New));\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: task.status === 1 ? \"is-done\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: true,\n    onChange: onChangeHandler,\n    checked: task.status === 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableSpan, {\n    callBack: title => editTaskHandler(todolistId, task.id, title),\n    title: task.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onHandlerDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"x\"));\n});\nexport default Task;","map":{"version":3,"names":["React","Checkbox","EditableSpan","removeTaskTC","updateStatusTC","updateTitleTC","TaskStatuses","useAppDispatch","Task","memo","task","todolistId","dispatch","editTaskHandler","taskID","newTitle","onHandlerDelete","id","onChangeHandler","e","newIsDoneValue","currentTarget","checked","Completed","New","status","title"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/components/Task/Task.tsx"],"sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {Checkbox} from \"@mui/material\";\r\nimport {EditableSpan} from \"../../common/EtidTitle/EtidTitle\";\r\nimport s from './Task.module.css'\r\nimport {removeTaskTC, updateStatusTC, updateTitleTC} from \"../../reducers/tasksReducer\";\r\nimport {TaskStatuses, TaskType} from \"../../api/todolistsApi\";\r\nimport {useAppDispatch} from \"../../common/hooks/hooks\";\r\n\r\n\r\nexport type TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n}\r\n\r\nconst Task = React.memo(({task, todolistId}: TaskPropsType) => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const editTaskHandler = (todolistId: string, taskID: string, newTitle: string) => {\r\n        dispatch(updateTitleTC(todolistId, taskID, newTitle))\r\n    }\r\n    const onHandlerDelete = () => dispatch(removeTaskTC(todolistId, task.id))\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        dispatch(updateStatusTC(todolistId, task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New))\r\n    }\r\n\r\n    return (\r\n        <li className={task.status === 1 ? \"is-done\" : \"\"}>\r\n            <Checkbox defaultChecked onChange={onChangeHandler} checked={task.status === 2}/>\r\n            <EditableSpan callBack={(title) => editTaskHandler(todolistId, task.id, title)} title={task.title}/>\r\n            <button onClick={onHandlerDelete}>x</button>\r\n        </li>\r\n    );\r\n});\r\n\r\nexport default Task;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAAQC,YAAR,QAA2B,kCAA3B;AAEA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,aAAtC,QAA0D,6BAA1D;AACA,SAAQC,YAAR,QAAqC,wBAArC;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AAQA,MAAMC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAW,QAAuC;EAAA,IAAtC;IAACC,IAAD;IAAOC;EAAP,CAAsC;EAC3D,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;EAEA,MAAMM,eAAe,GAAG,CAACF,UAAD,EAAqBG,MAArB,EAAqCC,QAArC,KAA0D;IAC9EH,QAAQ,CAACP,aAAa,CAACM,UAAD,EAAaG,MAAb,EAAqBC,QAArB,CAAd,CAAR;EACH,CAFD;;EAGA,MAAMC,eAAe,GAAG,MAAMJ,QAAQ,CAACT,YAAY,CAACQ,UAAD,EAAaD,IAAI,CAACO,EAAlB,CAAb,CAAtC;;EACA,MAAMC,eAAe,GAAIC,CAAD,IAAsC;IAC1D,IAAIC,cAAc,GAAGD,CAAC,CAACE,aAAF,CAAgBC,OAArC;IACAV,QAAQ,CAACR,cAAc,CAACO,UAAD,EAAaD,IAAI,CAACO,EAAlB,EAAsBG,cAAc,GAAGd,YAAY,CAACiB,SAAhB,GAA4BjB,YAAY,CAACkB,GAA7E,CAAf,CAAR;EACH,CAHD;;EAKA,oBACI;IAAI,SAAS,EAAEd,IAAI,CAACe,MAAL,KAAgB,CAAhB,GAAoB,SAApB,GAAgC,EAA/C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAU,cAAc,MAAxB;IAAyB,QAAQ,EAAEP,eAAnC;IAAoD,OAAO,EAAER,IAAI,CAACe,MAAL,KAAgB,CAA7E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,YAAD;IAAc,QAAQ,EAAGC,KAAD,IAAWb,eAAe,CAACF,UAAD,EAAaD,IAAI,CAACO,EAAlB,EAAsBS,KAAtB,CAAlD;IAAgF,KAAK,EAAEhB,IAAI,CAACgB,KAA5F;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAGI;IAAQ,OAAO,EAAEV,eAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAHJ,CADJ;AAOH,CAnBY,CAAb;AAqBA,eAAeR,IAAf"},"metadata":{},"sourceType":"module"}