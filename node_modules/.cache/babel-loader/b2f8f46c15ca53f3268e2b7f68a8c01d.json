{"ast":null,"code":"import { ResponseResultCode, todolistsAPI } from \"../api/todolistsApi\";\nimport axios from \"axios\";\nimport { setAppError, setAppStatus } from \"./appReducer\";\nconst initialState = [];\nexport const todoListsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_TODOLISTS':\n      {\n        return action.todolists.map(t => ({ ...t,\n          filter: 'all',\n          entityStatus: 'idle'\n        }));\n      }\n\n    case 'ADD_TODOLIST':\n      {\n        return [{ ...action.newTitle,\n          filter: 'all',\n          entityStatus: 'idle'\n        }, ...state];\n      }\n\n    case 'REMOVE_TODOLIST':\n      {\n        return state.filter(el => el.id !== action.todolistID);\n      }\n\n    case 'CHANGE_FILTER':\n      {\n        return state.map(t => t.id === action.payload.todoListID ? { ...t,\n          filter: action.payload.value\n        } : t);\n      }\n\n    case 'SET_ENTITY_STATUS':\n      {\n        return state.map(t => t.id === action.id ? { ...t,\n          entityStatus: action.status\n        } : t);\n      }\n\n    default:\n      return state;\n  }\n};\n// actions\nexport const removeTodoListAC = todolistID => ({\n  type: 'REMOVE_TODOLIST',\n  todolistID\n});\nexport const addTodoListAC = newTitle => ({\n  type: 'ADD_TODOLIST',\n  newTitle\n});\nexport const setTodolistsAC = todolists => ({\n  type: 'SET_TODOLISTS',\n  todolists\n});\nexport const changeFilterAC = (todoListID, value) => ({\n  type: 'CHANGE_FILTER',\n  payload: {\n    todoListID,\n    value\n  }\n});\nexport const changeTodolistEntityStatusAC = (id, status) => ({\n  type: 'SET_ENTITY_STATUS',\n  id,\n  status\n}); //thunks\n\nexport const fetchTodolistsTC = () => async dispatch => {\n  dispatch(setAppStatus('loading'));\n\n  try {\n    let response = await todolistsAPI.getTodolists();\n    dispatch(setTodolistsAC(response.data));\n  } catch (e) {\n    let err = e;\n\n    if (axios.isAxiosError(err)) {\n      var _err$response;\n\n      const error = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) ? err.response.data.message : err.message;\n      dispatch(setAppError(error));\n    }\n  } finally {\n    dispatch(setAppStatus('succeeded'));\n  }\n};\nexport const createTodolistTC = newTodolist => async dispatch => {\n  dispatch(setAppStatus('loading'));\n\n  try {\n    let response = await todolistsAPI.addTodolist(newTodolist);\n    dispatch(addTodoListAC(response.data.data.item));\n    dispatch(setAppStatus('loading'));\n  } catch (e) {\n    let err = e;\n\n    if (axios.isAxiosError(err)) {\n      var _err$response2;\n\n      const error = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) ? err.response.data.error : err.message;\n      dispatch(setAppError(error));\n    }\n  } finally {\n    dispatch(setAppStatus('succeeded'));\n  }\n};\nexport const deleteTodolistsTC = todoListID => async dispatch => {\n  dispatch(setAppStatus('loading'));\n  dispatch(changeTodolistEntityStatusAC(todoListID, 'loading'));\n\n  try {\n    const response = await todolistsAPI.deleteTodolists(todoListID);\n\n    if (response.data.resultCode === ResponseResultCode.OK) {\n      dispatch(removeTodoListAC(todoListID));\n    }\n  } catch (e) {\n    let err = e;\n\n    if (axios.isAxiosError(err)) {\n      var _err$response3;\n\n      const error = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) ? err.response.data.error : err.message;\n      dispatch(setAppError(error));\n    }\n  } finally {\n    dispatch(setAppStatus('succeeded'));\n    dispatch(changeTodolistEntityStatusAC(todoListID, 'succeeded'));\n  }\n}; //types","map":{"version":3,"names":["ResponseResultCode","todolistsAPI","axios","setAppError","setAppStatus","initialState","todoListsReducer","state","action","type","todolists","map","t","filter","entityStatus","newTitle","el","id","todolistID","payload","todoListID","value","status","removeTodoListAC","addTodoListAC","setTodolistsAC","changeFilterAC","changeTodolistEntityStatusAC","fetchTodolistsTC","dispatch","response","getTodolists","data","e","err","isAxiosError","error","message","createTodolistTC","newTodolist","addTodolist","item","deleteTodolistsTC","deleteTodolists","resultCode","OK"],"sources":["E:/IT-Incubator/Todolist-toolkit/src/reducers/todoListsReducer.tsx"],"sourcesContent":["import React from 'react';\r\nimport {ResponseResultCode, todolistsAPI, TodolistType} from \"../api/todolistsApi\";\r\nimport {AppThunk} from \"../store/store\";\r\nimport axios, {AxiosError} from \"axios\";\r\nimport {RequestStatusType, setAppError, setAppStatus} from \"./appReducer\";\r\n\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todoListsReducer = (state: Array<TodolistDomainType> = initialState, action: TodoListsActionType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'SET_TODOLISTS': {\r\n            return action.todolists.map(t => ({...t, filter: 'all', entityStatus: 'idle'}))\r\n        }\r\n        case 'ADD_TODOLIST': {\r\n            return [{...action.newTitle, filter: 'all', entityStatus: 'idle'}, ...state]\r\n        }\r\n        case 'REMOVE_TODOLIST': {\r\n            return state.filter(el => el.id !== action.todolistID)\r\n        }\r\n        case 'CHANGE_FILTER': {\r\n            return state.map(t => t.id === action.payload.todoListID ? {...t, filter: action.payload.value} : t)\r\n        }\r\n        case 'SET_ENTITY_STATUS': {\r\n            return state.map(t => t.id === action.id ? {...t, entityStatus: action.status} : t)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport type TodoListsActionType =\r\n    | ReturnType<typeof setTodolistsAC>\r\n    | ReturnType<typeof removeTodoListAC>\r\n    | ReturnType<typeof addTodoListAC>\r\n    | ReturnType<typeof changeFilterAC>\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\n\r\n\r\n// actions\r\nexport const removeTodoListAC = (todolistID: string) => ({type: 'REMOVE_TODOLIST', todolistID} as const)\r\nexport const addTodoListAC = (newTitle: TodolistType) => ({type: 'ADD_TODOLIST', newTitle} as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET_TODOLISTS', todolists} as const)\r\nexport const changeFilterAC = (todoListID: string, value: FilterValuesType) => ({\r\n    type: 'CHANGE_FILTER',\r\n    payload: {todoListID, value}\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'SET_ENTITY_STATUS',\r\n    id,\r\n    status\r\n} as const)\r\n\r\n//thunks\r\nexport const fetchTodolistsTC = (): AppThunk => async (dispatch) => {\r\n    dispatch(setAppStatus('loading'))\r\n    try {\r\n        let response = await todolistsAPI.getTodolists()\r\n        dispatch(setTodolistsAC(response.data))\r\n    } catch (e) {\r\n        let err = e as AxiosError | Error\r\n        if (axios.isAxiosError(err)) {\r\n            const error = err.response?.data\r\n                ? (err.response.data as { message: string }).message\r\n                : err.message\r\n            dispatch(setAppError(error))\r\n        }\r\n    } finally {\r\n        dispatch(setAppStatus('succeeded'))\r\n    }\r\n\r\n}\r\nexport const createTodolistTC = (newTodolist: string): AppThunk => async (dispatch) => {\r\n    dispatch(setAppStatus('loading'))\r\n    try {\r\n        let response = await todolistsAPI.addTodolist(newTodolist)\r\n        dispatch(addTodoListAC(response.data.data.item))\r\n        dispatch(setAppStatus('loading'))\r\n    } catch (e) {\r\n        let err = e as AxiosError | Error\r\n        if (axios.isAxiosError(err)) {\r\n            const error = err.response?.data\r\n                ? (err.response.data as { error: string }).error\r\n                : err.message\r\n            dispatch(setAppError(error))\r\n        }\r\n    } finally {\r\n        dispatch(setAppStatus('succeeded'))\r\n    }\r\n}\r\nexport const deleteTodolistsTC = (todoListID: string): AppThunk => async (dispatch) => {\r\n    dispatch(setAppStatus('loading'))\r\n    dispatch(changeTodolistEntityStatusAC(todoListID, 'loading'))\r\n    try {\r\n        const response = await todolistsAPI.deleteTodolists(todoListID)\r\n        if (response.data.resultCode === ResponseResultCode.OK) {\r\n            dispatch(removeTodoListAC(todoListID))\r\n        }\r\n    } catch (e) {\r\n        let err = e as AxiosError | Error\r\n        if (axios.isAxiosError(err)) {\r\n            const error = err.response?.data\r\n                ? (err.response.data as { error: string }).error\r\n                : err.message\r\n            dispatch(setAppError(error))\r\n        }\r\n    } finally {\r\n        dispatch(setAppStatus('succeeded'))\r\n        dispatch(changeTodolistEntityStatusAC(todoListID, 'succeeded'))\r\n    }\r\n}\r\n\r\n\r\n//types\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}